; Начало сегмента данных, здесь хранятся переменные программы
data segment
	; Cтрока для вывода на экран
	; '$' - признак конца строки
	; 10, 13 - символы перехода на новую строку и вовзрата каретки (В WIndows используются оба
	mes db 'Привет!', 10, 13, 'Меня зовут Disco-Death!', 10, 13, 'Я с удовольствием буду изучать Ассемблер!', '$'
data ends ; Конец сегмента данных

; Начало сегмента стека
stk segment stack 'stack'
    dw  256 dup (?) ; Создаём 256 слов для стека
stk ends ; Конец сегмента стека

code segment ; Начало сегмента кода, здесь хранятся команды для выполнения
start: ; Метка start - начало нашей программы
; Директива компилятора, указывает,
; что в регистре CS будет хранится информация о сегменте кода данной программы,
; в регистре DS - о сегменте данных данной программы,
; ну а в регистре SS - о стеке
	assume CS:code, DS: data, SS:stk
	; Настройка сегмента данных
	mov AX, data 			 
	mov DS, AX
	mov AH, 9 		; Функция №9 прерывания 21h - вывод строки на экран
	lea DX, mes 	; Берём адрес строки
	int 21h 		; Вызов прерывания для вывода строки
	mov AX, 4c00h 	; Функция завершения программы
	int 21h 		; Завершаем программу
code ends ; Конец сегмента кода

end start ; Конец программы с точкой входа start